name: Docker build and push
on:
  push:
  workflow_dispatch:

jobs:
  build:
    name: docker build and push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Set IMAGE_TAG
        run: |
          IMAGE_TAG=$(curl -fsL https://raw.githubusercontent.com/l3tnun/EPGStation/master/package-lock.json | jq .version -r)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
      - name: Check remote image tag
        id: check_remote_image_tag
        run: |
          tags_url=https://registry.hub.docker.com/v1/repositories/yasuoza/epgstation/tags
          remote_tag_exists=$(curl -sfL $tags_url | jq "[.[].name] | contains([\"${{ env.IMAGE_TAG }}\"])" -r)
          echo "::set-output name=remote_tag_exists::$remote_tag_exists"
      - name: Install buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Build image
        if: steps.check_remote_image_tag.outputs.remote_tag_exists != 'true'
        run: |
          docker buildx build . -t yasuoza/epgstation:$IMAGE_TAG --build-arg IMAGE_TAG=$IMAGE_TAG
      - name: Login to Docker Hub
        if: steps.check_remote_image_tag.outputs.remote_tag_exists != 'true'
        env:
          DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
          DOCKER_HUB_PASS: ${{ secrets.DOCKER_HUB_PASS }}
        run: docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
      - name: Push Docker Hub
        if: steps.check_remote_image_tag.outputs.remote_tag_exists != 'true'
        run: |
          docker push yasuoza/epgstation:$IMAGE_TAG
